/**
 * Shop class.
 * @constructor
 */
class Shop {
  constructor () {
    this.items = {
      building: {
        'cursor': {price: 15, cps: 0.1},
        'grandmother': {price: 100, cps: 8},
        'bakery': {price: 4000, cps: 75},
        'factory': {price: 85000, cps: 400},
        'cookie town': {price: 900000, cps: 5000}
      },
      upgrade: {
        'cursor': {price: 500, cpc: 4}
      }
    }
  }

  /**
   * Callback for buying specified item
   *
   * @callback buyItemCallback
   * @param {object} result - Callback result
   *   @param {string} result.feedback - Information about transaction result
   *   @param {object} result.item - Bought item
   *     @param {number} result.item.price - Price of the item
   *     @param {number} result.item.cps - Cookies per second generated by the item
   *   @param {number} result.change - Cookies change
   *   @param {boolean} result.succeeded - Boolean whether transaction succeeded
   */

  /**
   * Buy specified item
   *
   * @param {object} info - Information about transaction
   *   @param {string} info.type - Type of the item to be bought
   *   @param {string} info.name - Name of the item
   *   @param {number} info.cookies - All cookies owned by user
   * @param {buyItemCallback} callback - Callback with result object
   */
  buy ({type, name, cookies}, callback) {
    var result = {feedback: '', item: {}, change: 0, succeeded: false}
    if (typeof this.items[type][name] !== 'object') {
      result.feedback = "Specified item doesn't exists"
    } else if (this.items[type][name].price > cookies) {
      result.feedback = "You don't have enough money to buy that"
    } else {
      result.feedback = 'Item has been bought'
      result.item = this.items[type][name]
      result.change = cookies - result.item.price
      result.succeeded = true
    }
    callback(result)
  }
}

export default Shop
